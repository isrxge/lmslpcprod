"use client";
import "./globals.css";
import { Inter } from "next/font/google";
import { ClerkProvider } from "@clerk/nextjs";
import { ToastProvider } from "@/components/providers/toaster-provider";
import { ConfettiProvider } from "@/components/providers/confetti-provider";
import * as Ably from "ably";
import { AblyProvider } from "ably/react";
import { ThemeProvider } from "@/components/providers/theme-provider";
import { getFromStorage } from "@/components/ui/current-theme";
import { QueryClient, QueryClientProvider } from "react-query";
import React from "react";

// const client = new Ably.Realtime.Promise({ authUrl: "/api/notifications" });
const inter = Inter({ subsets: ["latin"] });
const queryClient = new QueryClient();
// export const metadata: Metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// }
if (typeof window !== "undefined") {
  let numberOfTabs =
    parseInt(window.localStorage.getItem("checkTab") + "") != undefined
      ? parseInt(window.localStorage.getItem("checkTab") + "") + 1
      : 1;
  window.localStorage.setItem("checkTab", numberOfTabs.toString());
  window.addEventListener("beforeunload", alertUser);
  function alertUser(this: Window, ev: BeforeUnloadEvent) {
    let numberOfTabs =
      parseInt(window.localStorage.getItem("checkTab") + "") != undefined
        ? parseInt(window.localStorage.getItem("checkTab") + "") - 1
        : 0;
    window.localStorage.setItem("checkTab", numberOfTabs.toString());
  }
  /* ---------- ðŸŽ¨ BANNER LMS Ä‘áº§y mÃ u sáº¯c ---------- */
  console.log(
    "%c LMS â€“ Learning Management System ",
    "font-size:20px;font-weight:700;background:#0070f3;color:#fff;padding:4px 12px;border-radius:4px"
  );

  const subtitle = "Empower â€¢ Learn â€¢ Grow ðŸš€";
  const colors = ["#e6194b", "#ff8c00", "#ffe119", "#3cb44b", "#42d4f4", "#4363d8", "#911eb4", "#f032e6"];
  const styled = subtitle.split("").map(ch => `%c${ch}`).join("");
  const styles = subtitle.split("").map((_, i) => `color:${colors[i % colors.length]};font-size:14px;`);
  console.log(styled, ...styles);
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <ClerkProvider>
      {/* <AblyProvider client={client}> */}
      <html lang="en">
        <body className={inter.className}>
          <ThemeProvider
            attribute="class"
            defaultTheme={getFromStorage("theme") as string}
            enableSystem
            disableTransitionOnChange
            storageKey="theme"
          >
            <QueryClientProvider client={queryClient}>
              <ConfettiProvider />
              <ToastProvider />
              {children}
            </QueryClientProvider>
          </ThemeProvider>
        </body>
      </html>
      {/* </AblyProvider> */}
    </ClerkProvider>
  );
}
